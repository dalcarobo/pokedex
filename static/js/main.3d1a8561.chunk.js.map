{"version":3,"sources":["assets/logo.png","assets/foil.gif","assets/shimmer.gif","styles/card.styled.js","components/Card/card.component.jsx","styles/container.styled.js","pages/pokedex.jsx","App.js","reportWebVitals.js","styles/global.styled.js","index.js"],"names":["CardStyled","styled","div","props","types","type","name","expanded","specy","is_baby","is_legendary","is_mythical","shimmer","foil","StatsBar","total","stat","toFixed","Card","pokemon","id","stats_","useState","setExpanded","pokemonTypes","map","Array","t","pokemonStats","nodes","key","stats","value","base_stat","glareEnable","glareMaxOpacity","glareColor","glarePosition","glareBorderRadius","perspective","style","transformStyle","margin","onClick","className","src","index","Container","Pokedex","pokemonList","setPokemonList","hasMore","offset","setOffset","getPokemonList","a","fetch","method","headers","body","JSON","stringify","query","variables","then","result","json","data","pokemon_v2_pokemon","Number","useEffect","display","color","alignItems","width","justifyContent","pokedexLogo","marginTop","fontSize","pageStart","loadMore","loader","initialLoad","threshold","href","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d1a8561.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.62bee4d5.png\";","export default __webpack_public_path__ + \"static/media/foil.ab03ef74.gif\";","export default __webpack_public_path__ + \"static/media/shimmer.bbd1c1e4.gif\";","import styled from 'styled-components';\r\nimport foil from '../assets/foil.gif';\r\nimport shimmer from '../assets/shimmer.gif';\r\n\r\nexport const CardStyled = styled.div`\r\n\tposition: relative;\r\n\twidth: 280px;\r\n\theight: 400px;\r\n\tmargin: 0;\r\n\tbox-shadow: 20px 20px 50px rgb(0, 0, 0, 0.5);\r\n\tborder-radius: 15px;\r\n\r\n\tbackground: ${(props) => {\r\n\t\treturn `linear-gradient(to bottom right, var(--color-${\r\n\t\t\tprops.types[0].type.name\r\n\t\t}) 50%, var(--color-${\r\n\t\t\tprops.types[1]?.type?.name ?? props.types[0].type.name\r\n\t\t}) 50%)`;\r\n\t}};\r\n\tbackground-blend-mode: normal;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tborder-top: 1px solid rgba(255, 255, 255, 0.5);\r\n\tborder-left: 1px solid rgba(255, 255, 255, 0.5);\r\n\tcursor: pointer;\r\n\tz-index: 1;\r\n\ttransition: all 0.5s ease;\r\n\ttransform: ${(props) => (props.expanded ? 'rotateY(180deg)' : '')};\r\n\ttransform-style: preserve-3d;\r\n\tbox-sizing: border-box;\r\n\r\n\tborder: ${(props) => {\r\n\t\tif (props.specy.is_baby === true) {\r\n\t\t\treturn '5px solid pink';\r\n\t\t}\r\n\t\tif (props.specy.is_legendary === true) {\r\n\t\t\treturn '5px solid #ada328';\r\n\t\t}\r\n\t\tif (props.specy.is_mythical === true) {\r\n\t\t\treturn '5px solid #A6A6A6';\r\n\t\t}\r\n\t}};\r\n\r\n\t&:after {\r\n\t\t${(props) => {\r\n\t\t\tif (\r\n\t\t\t\tprops.specy.is_baby === true ||\r\n\t\t\t\tprops.specy.is_legendary === true ||\r\n\t\t\t\tprops.specy.is_mythical === true\r\n\t\t\t) {\r\n\t\t\t\treturn `\r\n          position: absolute;\r\n        content: '';\r\n        opacity: 0.2;\r\n        border-radius: 15px;\r\n        top: 0;\r\n        left: 0;\r\n        width: 275px;\r\n        height: 395px;\r\n        background: url('${shimmer}');\r\n        background-size: cover;\r\n        box-sizing: border-box;`;\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n\r\n\t&:before {\r\n\t\t${(props) => {\r\n\t\t\tif (\r\n\t\t\t\tprops.specy.is_baby === true ||\r\n\t\t\t\tprops.specy.is_legendary === true ||\r\n\t\t\t\tprops.specy.is_mythical === true\r\n\t\t\t) {\r\n\t\t\t\treturn `\r\n\t\tcontent: '';\r\n\t\topacity: 0.1;\r\n\t\tborder-radius: 15px;\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 275px;\r\n\t\theight: 395px;\r\n\t\tbackground: url('${foil}');\r\n\t\tbox-sizing: border-box;`;\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n\r\n\t.content {\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t\tdisplay: ${(props) => (props.expanded ? 'none' : 'block')};\r\n\t\ttransition: all 1s ease;\r\n\t}\r\n\r\n\t.content_back {\r\n\t\tpadding: 20px;\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\ttransform: rotateY(180deg);\r\n\t\tdisplay: ${(props) => (props.expanded ? 'block' : 'none')};\r\n\t\ttransition: all 1s ease;\r\n\t}\r\n\r\n\th2 {\r\n\t\tposition: absolute;\r\n\t\ttop: -140px;\r\n\t\tright: 5px;\r\n\t\tfont-size: 8em;\r\n\t\tcolor: rgba(255, 255, 255, 0.09);\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\th3 {\r\n\t\tfont-size: 1.8em;\r\n\t\tcolor: #fff;\r\n\t\tz-index: 1;\r\n\t\ttransform: translateZ(30px);\r\n\t\tline-height: 0px;\r\n\t\ttext-transform: capitalize;\r\n\t}\r\n\r\n\timg {\r\n\t\twidth: 180px;\r\n\t\ttransform: translateZ(40px);\r\n\t}\r\n\r\n\tp {\r\n\t\tfont-size: 1em;\r\n\t\tcolor: #fff;\r\n\t\tfont-weight: 300;\r\n\t\ttransform: translateZ(30px);\r\n\t}\r\n\r\n\ta {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 8px 20px;\r\n\t\tmargin-top: 15px;\r\n\t\tbackground: #fff;\r\n\t\tcolor: #000;\r\n\t\ttext-decoration: none;\r\n\t\tborder-radius: 4px;\r\n\t\tfont-weight: 500;\r\n\t\tbox-shadow: 0 5px 15px rgb(0, 0, 0, 0.2);\r\n\t\ttransform: translateZ(30px);\r\n\t}\r\n`;\r\n\r\nexport const StatsBar = styled.div`\r\n\theight: 25px;\r\n\twidth: 255px;\r\n\tmargin-top: 20px;\r\n\ttext-align: left;\r\n\tborder-radius: 4px;\r\n\tbackground: ${(props) => {\r\n\t\tconst total = (props.stat * 100) / 255;\r\n\t\treturn `linear-gradient(to right, #348721 ${total.toFixed(\r\n\t\t\t1\r\n\t\t)}%, #dedede 0%)`;\r\n\t}};\r\n\r\n\th4 {\r\n\t\tpadding: 2px 0 0 8px;\r\n\t}\r\n`;\r\n","import React, { useState } from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\nimport { CardStyled, StatsBar } from '../../styles/card.styled';\r\n\r\nconst Card = ({ pokemon: { types, name, id, stats_, specy } }) => {\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\r\n\tconst pokemonTypes = types.map((type) => {\r\n\t\tif (type instanceof Array) return type.map((t) => t);\r\n\t\telse return type;\r\n\t});\r\n\r\n\tconst pokemonStats = stats_.nodes.map((stat) => ({\r\n\t\tkey: stat.stats.name,\r\n\t\tvalue: stat.base_stat,\r\n\t}));\r\n\r\n\tconst handleExpanded = () => {\r\n\t\tsetExpanded(!expanded);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tilt\r\n\t\t\tglareEnable={true}\r\n\t\t\tglareMaxOpacity={1}\r\n\t\t\tglareColor='#ffffff'\r\n\t\t\tglarePosition={'all'}\r\n\t\t\tglareBorderRadius='20px'\r\n\t\t\tperspective={900}\r\n\t\t\tstyle={{\r\n\t\t\t\ttransformStyle: 'preserve-3d',\r\n\t\t\t\tmargin: 20,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<CardStyled\r\n\t\t\t\ttypes={pokemonTypes}\r\n\t\t\t\tspecy={specy}\r\n\t\t\t\texpanded={expanded}\r\n\t\t\t\tonClick={handleExpanded}\r\n\t\t\t>\r\n\t\t\t\t<div className='content'>\r\n\t\t\t\t\t<h2>{id}</h2>\r\n\t\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='content_back'>\r\n\t\t\t\t\t<h3>Attributes</h3>\r\n\t\t\t\t\t{pokemonStats.map((stats, index) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<StatsBar stat={stats.value} key={index}>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t{stats.key}: {stats.value}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</StatsBar>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</CardStyled>\r\n\t\t</Tilt>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmargin-top: 20px;\r\n\tmax-width: 1300px;\r\n\tflex-wrap: wrap;\r\n\tz-index: 1;\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport pokedexLogo from '../assets/logo.png';\r\nimport Card from '../components/Card/card.component';\r\nimport { Container } from '../styles/container.styled';\r\n\r\nconst getPokemonListQuery = `\r\nquery GetPokemonList($offset: Int!) {\r\n  pokemon_v2_pokemon(limit: 20, offset: $offset, where: {is_default: {_eq: true}}) {\r\n    name\r\n    id: pokemon_species_id\r\n    is_default\r\n    types: pokemon_v2_pokemontypes {\r\n      type: pokemon_v2_type {\r\n        name\r\n      }\r\n    }\r\n    stats_: pokemon_v2_pokemonstats_aggregate {\r\n      nodes {\r\n        base_stat\r\n        stats: pokemon_v2_stat {\r\n          name\r\n        }\r\n      }\r\n    }\r\n    specy: pokemon_v2_pokemonspecy {\r\n      is_legendary\r\n      is_mythical\r\n      is_baby\r\n    }\r\n  }\r\n}`;\r\n\r\nconst Pokedex = () => {\r\n\tconst [pokemonList, setPokemonList] = useState([]);\r\n\tconst [hasMore, setHasMore] = useState(true);\r\n\tconst [offset, setOffset] = useState(0);\r\n\r\n\tconst getPokemonList = async () => {\r\n\t\tawait fetch('https://beta.pokeapi.co/graphql/v1beta', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tquery: getPokemonListQuery,\r\n\t\t\t\tvariables: { offset },\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((result) => result.json())\r\n\t\t\t.then(({ data }) => {\r\n\t\t\t\tsetPokemonList([...pokemonList, ...data.pokemon_v2_pokemon]);\r\n\t\t\t});\r\n\t\tsetOffset(Number(offset) + 20);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetPokemonList();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\talignItems: 'baseline',\r\n\t\t\t\t\twidth: '99vw',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={pokedexLogo}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: 290,\r\n\t\t\t\t\t\tmarginTop: 20,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<span style={{ fontSize: 12 }}>v1.0.0</span>\r\n\t\t\t</div>\r\n\t\t\t<InfiniteScroll\r\n\t\t\t\tpageStart={0}\r\n\t\t\t\thasMore={hasMore}\r\n\t\t\t\tloadMore={getPokemonList}\r\n\t\t\t\tloader={null}\r\n\t\t\t\tinitialLoad={false}\r\n\t\t\t\tthreshold={300}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{pokemonList &&\r\n\t\t\t\t\t\tpokemonList.map((pokemon, index) => (\r\n\t\t\t\t\t\t\t<Card pokemon={pokemon} key={index} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</Container>\r\n\t\t\t</InfiniteScroll>\r\n\t\t\t<footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDeveloped by{' '}\r\n\t\t\t\t\t<a href='https://github.com/dalcarobo' target='_blank'>\r\n\t\t\t\t\t\tGabriel Dal Carobo\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</p>\r\n\t\t\t</footer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Pokedex;\r\n","import './App.css';\nimport Pokedex from './pages/pokedex';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Pokedex />\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n\r\n:root {\r\n  --color-grass: #78c850b8;\r\n  --color-poison: #A040A0b8;\r\n  --color-fire: #F08030b8;\r\n  --color-water: #6890F0b8;\r\n  --color-ghost: #705898b8;\r\n  --color-flying: #d7cdf5e6;\r\n  --color-normal: #A8A878b8;\r\n  --color-electric: #F8D030b8;\r\n  --color-ice: #98D8D8b8;\r\n  --color-ground: #E0C068b8;\r\n  --color-fighting: #C03028b8;\r\n  --color-psychic: #F85888b8;\r\n  --color-dark: #705848b8;\r\n  --color-rock: #B8A038b8;\r\n  --color-bug: #A8B820b8;\r\n  --color-steel: #B8B8D0b8;\r\n  --color-dragon: #7038F8b8;\r\n  --color-fairy: #FFAEC9b8;\r\n}\r\n\r\n  body {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    background: #161623;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\r\n      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    overflow-x: hidden;\r\n  \r\n  }\r\n\r\n  footer {\r\n    width: 100vw;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    z-index: 99;\r\n    padding: 5px;\r\n    backdrop-filter: blur(10px);\r\n    background-color: rgba(18, 18, 18, 0.5); \r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    p {\r\n    color: white;\r\n  \r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      color: #eee;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './styles/global.styled';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GlobalStyle />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}